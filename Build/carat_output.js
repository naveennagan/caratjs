!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);var n=["NONE","DIV"];var o=function(){return this.isTypeValid=function(e){return-1!=n.indexOf(e)?e:"NONE"},this.vdom={init:(e,t,r,n,o)=>{this.vdom.type=this.isTypeValid(e),this.vdom.content=t||"",this.vdom.children=r||[],this.vdom.parent=n||{},this.vdom.props=o||{}},getHash:()=>{var e="CARAT";return Object.keys(this.vdom.props).map(t=>{e+=this.vdom.props[t]}),e},getChildren:()=>this.vdom.children,type:"NONE",children:[],content:"",parent:{},props:{}},this.vdom},i=function(e,t){if("DIV"===e.type){var r=document.createElement("div");return e.content&&r.appendChild(document.createTextNode(e.content)),e.children.map(e=>{i(e,r)}),t.appendChild(r),t}return t},a=i,s=new DOMParser,u=/\{([0-9A-Za-z ]+)\}/g,d=function(e,t){if(!e)throw"View part of the component is not defined ! ";this.view=e,this.fields=t,this.getVDom=(()=>{var e=this.interpolate(this.view,this.fields),t=s.parseFromString(e,"text/html");return this.createVdomFromDOM(t,{})}),this.createVdomFromDOM=((e,t)=>{if(!e)return{};for(var r=new o,n=[],i=e.childNodes,a=0;a<i.length;a++){var s=this.createVdomFromDOM(i[a],r);n.push(s)}var u=e.attributes;return r.init("DIV",e.nodeValue,n,t,u),r}),this.evaluateExpression=((e,t)=>{Object.keys(t).map(e=>{`var ${e}=${t[e]};`})}),this.interpolate=((e,t)=>{for(;e.match(u);)text.replace(regex,e=>{var r=e.slice(1,-1);return this.evaluateExpression(r,t)})})};d.mount=((e,t)=>{return console.log("Render function ",a),a(e,t)});var c=d;console.log("Imported Carat from ",c),window.Carat=c}]);
//# sourceMappingURL=carat_output.js.map